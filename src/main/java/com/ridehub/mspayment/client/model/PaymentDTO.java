/*
 * Ms Payment API
 * Ms Payment API documentation
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ridehub.mspayment.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PaymentDTO
 */
@JsonPropertyOrder({
  PaymentDTO.JSON_PROPERTY_ID,
  PaymentDTO.JSON_PROPERTY_BOOKING_ID,
  PaymentDTO.JSON_PROPERTY_USER_ID,
  PaymentDTO.JSON_PROPERTY_AMOUNT,
  PaymentDTO.JSON_PROPERTY_CURRENCY,
  PaymentDTO.JSON_PROPERTY_PAYMENT_METHOD,
  PaymentDTO.JSON_PROPERTY_STATUS,
  PaymentDTO.JSON_PROPERTY_TRANSACTION_ID,
  PaymentDTO.JSON_PROPERTY_PAYMENT_GATEWAY_RESPONSE,
  PaymentDTO.JSON_PROPERTY_CREATED_AT,
  PaymentDTO.JSON_PROPERTY_UPDATED_AT
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class PaymentDTO {
  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nonnull
  private UUID id;

  public static final String JSON_PROPERTY_BOOKING_ID = "bookingId";
  @jakarta.annotation.Nonnull
  private UUID bookingId;

  public static final String JSON_PROPERTY_USER_ID = "userId";
  @jakarta.annotation.Nonnull
  private UUID userId;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  @jakarta.annotation.Nonnull
  private BigDecimal amount;

  public static final String JSON_PROPERTY_CURRENCY = "currency";
  @jakarta.annotation.Nonnull
  private String currency;

  public static final String JSON_PROPERTY_PAYMENT_METHOD = "paymentMethod";
  @jakarta.annotation.Nonnull
  private String paymentMethod;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    PENDING(String.valueOf("PENDING")),
    
    COMPLETED(String.valueOf("COMPLETED")),
    
    FAILED(String.valueOf("FAILED")),
    
    REFUNDED(String.valueOf("REFUNDED"));

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  @jakarta.annotation.Nonnull
  private StatusEnum status;

  public static final String JSON_PROPERTY_TRANSACTION_ID = "transactionId";
  @jakarta.annotation.Nullable
  private String transactionId;

  public static final String JSON_PROPERTY_PAYMENT_GATEWAY_RESPONSE = "paymentGatewayResponse";
  @jakarta.annotation.Nullable
  private String paymentGatewayResponse;

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  @jakarta.annotation.Nonnull
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
  @jakarta.annotation.Nonnull
  private OffsetDateTime updatedAt;

  public PaymentDTO() {
  }

  public PaymentDTO id(@jakarta.annotation.Nonnull UUID id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setId(@jakarta.annotation.Nonnull UUID id) {
    this.id = id;
  }


  public PaymentDTO bookingId(@jakarta.annotation.Nonnull UUID bookingId) {
    
    this.bookingId = bookingId;
    return this;
  }

  /**
   * Get bookingId
   * @return bookingId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BOOKING_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getBookingId() {
    return bookingId;
  }


  @JsonProperty(JSON_PROPERTY_BOOKING_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBookingId(@jakarta.annotation.Nonnull UUID bookingId) {
    this.bookingId = bookingId;
  }


  public PaymentDTO userId(@jakarta.annotation.Nonnull UUID userId) {
    
    this.userId = userId;
    return this;
  }

  /**
   * Get userId
   * @return userId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getUserId() {
    return userId;
  }


  @JsonProperty(JSON_PROPERTY_USER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUserId(@jakarta.annotation.Nonnull UUID userId) {
    this.userId = userId;
  }


  public PaymentDTO amount(@jakarta.annotation.Nonnull BigDecimal amount) {
    
    this.amount = amount;
    return this;
  }

  /**
   * Get amount
   * @return amount
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setAmount(@jakarta.annotation.Nonnull BigDecimal amount) {
    this.amount = amount;
  }


  public PaymentDTO currency(@jakarta.annotation.Nonnull String currency) {
    
    this.currency = currency;
    return this;
  }

  /**
   * Get currency
   * @return currency
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getCurrency() {
    return currency;
  }


  @JsonProperty(JSON_PROPERTY_CURRENCY)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCurrency(@jakarta.annotation.Nonnull String currency) {
    this.currency = currency;
  }


  public PaymentDTO paymentMethod(@jakarta.annotation.Nonnull String paymentMethod) {
    
    this.paymentMethod = paymentMethod;
    return this;
  }

  /**
   * Get paymentMethod
   * @return paymentMethod
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPaymentMethod() {
    return paymentMethod;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_METHOD)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPaymentMethod(@jakarta.annotation.Nonnull String paymentMethod) {
    this.paymentMethod = paymentMethod;
  }


  public PaymentDTO status(@jakarta.annotation.Nonnull StatusEnum status) {
    
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(@jakarta.annotation.Nonnull StatusEnum status) {
    this.status = status;
  }


  public PaymentDTO transactionId(@jakarta.annotation.Nullable String transactionId) {
    
    this.transactionId = transactionId;
    return this;
  }

  /**
   * Get transactionId
   * @return transactionId
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getTransactionId() {
    return transactionId;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTransactionId(@jakarta.annotation.Nullable String transactionId) {
    this.transactionId = transactionId;
  }


  public PaymentDTO paymentGatewayResponse(@jakarta.annotation.Nullable String paymentGatewayResponse) {
    
    this.paymentGatewayResponse = paymentGatewayResponse;
    return this;
  }

  /**
   * Get paymentGatewayResponse
   * @return paymentGatewayResponse
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_GATEWAY_RESPONSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPaymentGatewayResponse() {
    return paymentGatewayResponse;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_GATEWAY_RESPONSE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentGatewayResponse(@jakarta.annotation.Nullable String paymentGatewayResponse) {
    this.paymentGatewayResponse = paymentGatewayResponse;
  }


  public PaymentDTO createdAt(@jakarta.annotation.Nonnull OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(@jakarta.annotation.Nonnull OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public PaymentDTO updatedAt(@jakarta.annotation.Nonnull OffsetDateTime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setUpdatedAt(@jakarta.annotation.Nonnull OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentDTO paymentDTO = (PaymentDTO) o;
    return Objects.equals(this.id, paymentDTO.id) &&
        Objects.equals(this.bookingId, paymentDTO.bookingId) &&
        Objects.equals(this.userId, paymentDTO.userId) &&
        Objects.equals(this.amount, paymentDTO.amount) &&
        Objects.equals(this.currency, paymentDTO.currency) &&
        Objects.equals(this.paymentMethod, paymentDTO.paymentMethod) &&
        Objects.equals(this.status, paymentDTO.status) &&
        Objects.equals(this.transactionId, paymentDTO.transactionId) &&
        Objects.equals(this.paymentGatewayResponse, paymentDTO.paymentGatewayResponse) &&
        Objects.equals(this.createdAt, paymentDTO.createdAt) &&
        Objects.equals(this.updatedAt, paymentDTO.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, bookingId, userId, amount, currency, paymentMethod, status, transactionId, paymentGatewayResponse, createdAt, updatedAt);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentDTO {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    bookingId: ").append(toIndentedString(bookingId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    paymentMethod: ").append(toIndentedString(paymentMethod)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    paymentGatewayResponse: ").append(toIndentedString(paymentGatewayResponse)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

