/*
 * Ms Route API
 * Ms Route API documentation
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ridehub.msroute.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SimpleAttendantRequestDTO
 */
@JsonPropertyOrder({
  SimpleAttendantRequestDTO.JSON_PROPERTY_NAME,
  SimpleAttendantRequestDTO.JSON_PROPERTY_AGE,
  SimpleAttendantRequestDTO.JSON_PROPERTY_GENDER,
  SimpleAttendantRequestDTO.JSON_PROPERTY_PHONE_NUMBER,
  SimpleAttendantRequestDTO.JSON_PROPERTY_STATUS
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class SimpleAttendantRequestDTO {
  public static final String JSON_PROPERTY_NAME = "name";
  @jakarta.annotation.Nonnull
  private String name;

  public static final String JSON_PROPERTY_AGE = "age";
  @jakarta.annotation.Nullable
  private Integer age;

  /**
   * Gets or Sets gender
   */
  public enum GenderEnum {
    MALE(String.valueOf("MALE")),
    
    FEMALE(String.valueOf("FEMALE")),
    
    OTHER(String.valueOf("OTHER"));

    private String value;

    GenderEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static GenderEnum fromValue(String value) {
      for (GenderEnum b : GenderEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_GENDER = "gender";
  @jakarta.annotation.Nullable
  private GenderEnum gender;

  public static final String JSON_PROPERTY_PHONE_NUMBER = "phoneNumber";
  @jakarta.annotation.Nullable
  private String phoneNumber;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    ACTIVE(String.valueOf("ACTIVE")),
    
    INACTIVE(String.valueOf("INACTIVE"));

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  @jakarta.annotation.Nullable
  private StatusEnum status;

  public SimpleAttendantRequestDTO() {
  }

  public SimpleAttendantRequestDTO name(@jakarta.annotation.Nonnull String name) {
    
    this.name = name;
    return this;
  }

  /**
   * Get name
   * @return name
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setName(@jakarta.annotation.Nonnull String name) {
    this.name = name;
  }


  public SimpleAttendantRequestDTO age(@jakarta.annotation.Nullable Integer age) {
    
    this.age = age;
    return this;
  }

  /**
   * Get age
   * @return age
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAge() {
    return age;
  }


  @JsonProperty(JSON_PROPERTY_AGE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAge(@jakarta.annotation.Nullable Integer age) {
    this.age = age;
  }


  public SimpleAttendantRequestDTO gender(@jakarta.annotation.Nullable GenderEnum gender) {
    
    this.gender = gender;
    return this;
  }

  /**
   * Get gender
   * @return gender
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GENDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public GenderEnum getGender() {
    return gender;
  }


  @JsonProperty(JSON_PROPERTY_GENDER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGender(@jakarta.annotation.Nullable GenderEnum gender) {
    this.gender = gender;
  }


  public SimpleAttendantRequestDTO phoneNumber(@jakarta.annotation.Nullable String phoneNumber) {
    
    this.phoneNumber = phoneNumber;
    return this;
  }

  /**
   * Get phoneNumber
   * @return phoneNumber
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getPhoneNumber() {
    return phoneNumber;
  }


  @JsonProperty(JSON_PROPERTY_PHONE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPhoneNumber(@jakarta.annotation.Nullable String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }


  public SimpleAttendantRequestDTO status(@jakarta.annotation.Nullable StatusEnum status) {
    
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(@jakarta.annotation.Nullable StatusEnum status) {
    this.status = status;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SimpleAttendantRequestDTO simpleAttendantRequestDTO = (SimpleAttendantRequestDTO) o;
    return Objects.equals(this.name, simpleAttendantRequestDTO.name) &&
        Objects.equals(this.age, simpleAttendantRequestDTO.age) &&
        Objects.equals(this.gender, simpleAttendantRequestDTO.gender) &&
        Objects.equals(this.phoneNumber, simpleAttendantRequestDTO.phoneNumber) &&
        Objects.equals(this.status, simpleAttendantRequestDTO.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, age, gender, phoneNumber, status);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SimpleAttendantRequestDTO {\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    age: ").append(toIndentedString(age)).append("\n");
    sb.append("    gender: ").append(toIndentedString(gender)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

