/*
 * Ms Route API
 * Ms Route API documentation
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ridehub.msroute.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ridehub.msroute.client.model.SeatMapDTO;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * VehicleDTO
 */
@JsonPropertyOrder({
  VehicleDTO.JSON_PROPERTY_ID,
  VehicleDTO.JSON_PROPERTY_TYPE,
  VehicleDTO.JSON_PROPERTY_TYPE_FACTOR,
  VehicleDTO.JSON_PROPERTY_PLATE_NUMBER,
  VehicleDTO.JSON_PROPERTY_BRAND,
  VehicleDTO.JSON_PROPERTY_DESCRIPTION,
  VehicleDTO.JSON_PROPERTY_CREATED_AT,
  VehicleDTO.JSON_PROPERTY_UPDATED_AT,
  VehicleDTO.JSON_PROPERTY_IS_DELETED,
  VehicleDTO.JSON_PROPERTY_DELETED_AT,
  VehicleDTO.JSON_PROPERTY_DELETED_BY,
  VehicleDTO.JSON_PROPERTY_SEAT_MAP
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class VehicleDTO {
  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nullable
  private Long id;

  /**
   * Gets or Sets type
   */
  public enum TypeEnum {
    STANDARD_BUS(String.valueOf("STANDARD_BUS")),
    
    LIMOUSINE(String.valueOf("LIMOUSINE"));

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TypeEnum fromValue(String value) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TYPE = "type";
  @jakarta.annotation.Nonnull
  private TypeEnum type;

  public static final String JSON_PROPERTY_TYPE_FACTOR = "typeFactor";
  @jakarta.annotation.Nullable
  private BigDecimal typeFactor;

  public static final String JSON_PROPERTY_PLATE_NUMBER = "plateNumber";
  @jakarta.annotation.Nonnull
  private String plateNumber;

  public static final String JSON_PROPERTY_BRAND = "brand";
  @jakarta.annotation.Nullable
  private String brand;

  public static final String JSON_PROPERTY_DESCRIPTION = "description";
  @jakarta.annotation.Nullable
  private String description;

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  @jakarta.annotation.Nonnull
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
  @jakarta.annotation.Nullable
  private OffsetDateTime updatedAt;

  public static final String JSON_PROPERTY_IS_DELETED = "isDeleted";
  @jakarta.annotation.Nullable
  private Boolean isDeleted;

  public static final String JSON_PROPERTY_DELETED_AT = "deletedAt";
  @jakarta.annotation.Nullable
  private OffsetDateTime deletedAt;

  public static final String JSON_PROPERTY_DELETED_BY = "deletedBy";
  @jakarta.annotation.Nullable
  private UUID deletedBy;

  public static final String JSON_PROPERTY_SEAT_MAP = "seatMap";
  @jakarta.annotation.Nonnull
  private SeatMapDTO seatMap;

  public VehicleDTO() {
  }

  public VehicleDTO id(@jakarta.annotation.Nullable Long id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@jakarta.annotation.Nullable Long id) {
    this.id = id;
  }


  public VehicleDTO type(@jakarta.annotation.Nonnull TypeEnum type) {
    
    this.type = type;
    return this;
  }

  /**
   * Get type
   * @return type
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public TypeEnum getType() {
    return type;
  }


  @JsonProperty(JSON_PROPERTY_TYPE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setType(@jakarta.annotation.Nonnull TypeEnum type) {
    this.type = type;
  }


  public VehicleDTO typeFactor(@jakarta.annotation.Nullable BigDecimal typeFactor) {
    
    this.typeFactor = typeFactor;
    return this;
  }

  /**
   * Get typeFactor
   * @return typeFactor
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TYPE_FACTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getTypeFactor() {
    return typeFactor;
  }


  @JsonProperty(JSON_PROPERTY_TYPE_FACTOR)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTypeFactor(@jakarta.annotation.Nullable BigDecimal typeFactor) {
    this.typeFactor = typeFactor;
  }


  public VehicleDTO plateNumber(@jakarta.annotation.Nonnull String plateNumber) {
    
    this.plateNumber = plateNumber;
    return this;
  }

  /**
   * Get plateNumber
   * @return plateNumber
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_PLATE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getPlateNumber() {
    return plateNumber;
  }


  @JsonProperty(JSON_PROPERTY_PLATE_NUMBER)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setPlateNumber(@jakarta.annotation.Nonnull String plateNumber) {
    this.plateNumber = plateNumber;
  }


  public VehicleDTO brand(@jakarta.annotation.Nullable String brand) {
    
    this.brand = brand;
    return this;
  }

  /**
   * Get brand
   * @return brand
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BRAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBrand() {
    return brand;
  }


  @JsonProperty(JSON_PROPERTY_BRAND)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBrand(@jakarta.annotation.Nullable String brand) {
    this.brand = brand;
  }


  public VehicleDTO description(@jakarta.annotation.Nullable String description) {
    
    this.description = description;
    return this;
  }

  /**
   * Get description
   * @return description
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getDescription() {
    return description;
  }


  @JsonProperty(JSON_PROPERTY_DESCRIPTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDescription(@jakarta.annotation.Nullable String description) {
    this.description = description;
  }


  public VehicleDTO createdAt(@jakarta.annotation.Nonnull OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(@jakarta.annotation.Nonnull OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public VehicleDTO updatedAt(@jakarta.annotation.Nullable OffsetDateTime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedAt(@jakarta.annotation.Nullable OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public VehicleDTO isDeleted(@jakarta.annotation.Nullable Boolean isDeleted) {
    
    this.isDeleted = isDeleted;
    return this;
  }

  /**
   * Get isDeleted
   * @return isDeleted
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsDeleted() {
    return isDeleted;
  }


  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsDeleted(@jakarta.annotation.Nullable Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }


  public VehicleDTO deletedAt(@jakarta.annotation.Nullable OffsetDateTime deletedAt) {
    
    this.deletedAt = deletedAt;
    return this;
  }

  /**
   * Get deletedAt
   * @return deletedAt
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getDeletedAt() {
    return deletedAt;
  }


  @JsonProperty(JSON_PROPERTY_DELETED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeletedAt(@jakarta.annotation.Nullable OffsetDateTime deletedAt) {
    this.deletedAt = deletedAt;
  }


  public VehicleDTO deletedBy(@jakarta.annotation.Nullable UUID deletedBy) {
    
    this.deletedBy = deletedBy;
    return this;
  }

  /**
   * Get deletedBy
   * @return deletedBy
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getDeletedBy() {
    return deletedBy;
  }


  @JsonProperty(JSON_PROPERTY_DELETED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeletedBy(@jakarta.annotation.Nullable UUID deletedBy) {
    this.deletedBy = deletedBy;
  }


  public VehicleDTO seatMap(@jakarta.annotation.Nonnull SeatMapDTO seatMap) {
    
    this.seatMap = seatMap;
    return this;
  }

  /**
   * Get seatMap
   * @return seatMap
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_SEAT_MAP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public SeatMapDTO getSeatMap() {
    return seatMap;
  }


  @JsonProperty(JSON_PROPERTY_SEAT_MAP)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setSeatMap(@jakarta.annotation.Nonnull SeatMapDTO seatMap) {
    this.seatMap = seatMap;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    VehicleDTO vehicleDTO = (VehicleDTO) o;
    return Objects.equals(this.id, vehicleDTO.id) &&
        Objects.equals(this.type, vehicleDTO.type) &&
        Objects.equals(this.typeFactor, vehicleDTO.typeFactor) &&
        Objects.equals(this.plateNumber, vehicleDTO.plateNumber) &&
        Objects.equals(this.brand, vehicleDTO.brand) &&
        Objects.equals(this.description, vehicleDTO.description) &&
        Objects.equals(this.createdAt, vehicleDTO.createdAt) &&
        Objects.equals(this.updatedAt, vehicleDTO.updatedAt) &&
        Objects.equals(this.isDeleted, vehicleDTO.isDeleted) &&
        Objects.equals(this.deletedAt, vehicleDTO.deletedAt) &&
        Objects.equals(this.deletedBy, vehicleDTO.deletedBy) &&
        Objects.equals(this.seatMap, vehicleDTO.seatMap);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, type, typeFactor, plateNumber, brand, description, createdAt, updatedAt, isDeleted, deletedAt, deletedBy, seatMap);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class VehicleDTO {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    typeFactor: ").append(toIndentedString(typeFactor)).append("\n");
    sb.append("    plateNumber: ").append(toIndentedString(plateNumber)).append("\n");
    sb.append("    brand: ").append(toIndentedString(brand)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    deletedAt: ").append(toIndentedString(deletedAt)).append("\n");
    sb.append("    deletedBy: ").append(toIndentedString(deletedBy)).append("\n");
    sb.append("    seatMap: ").append(toIndentedString(seatMap)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

