/*
 * Ms Route API
 * Ms Route API documentation
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ridehub.msroute.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ridehub.msroute.client.model.FloorDTO;
import com.ridehub.msroute.client.model.SeatDTO;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * SeatMapDetailVM
 */
@JsonPropertyOrder({
  SeatMapDetailVM.JSON_PROPERTY_FLOORS,
  SeatMapDetailVM.JSON_PROPERTY_SEATS_BY_FLOOR_ID
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class SeatMapDetailVM {
  public static final String JSON_PROPERTY_FLOORS = "floors";
  @jakarta.annotation.Nullable
  private List<FloorDTO> floors = new ArrayList<>();

  public static final String JSON_PROPERTY_SEATS_BY_FLOOR_ID = "seatsByFloorId";
  @jakarta.annotation.Nullable
  private Map<String, List<SeatDTO>> seatsByFloorId = new HashMap<>();

  public SeatMapDetailVM() {
  }

  public SeatMapDetailVM floors(@jakarta.annotation.Nullable List<FloorDTO> floors) {
    
    this.floors = floors;
    return this;
  }

  public SeatMapDetailVM addFloorsItem(FloorDTO floorsItem) {
    if (this.floors == null) {
      this.floors = new ArrayList<>();
    }
    this.floors.add(floorsItem);
    return this;
  }

  /**
   * Get floors
   * @return floors
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FLOORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<FloorDTO> getFloors() {
    return floors;
  }


  @JsonProperty(JSON_PROPERTY_FLOORS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFloors(@jakarta.annotation.Nullable List<FloorDTO> floors) {
    this.floors = floors;
  }


  public SeatMapDetailVM seatsByFloorId(@jakarta.annotation.Nullable Map<String, List<SeatDTO>> seatsByFloorId) {
    
    this.seatsByFloorId = seatsByFloorId;
    return this;
  }

  public SeatMapDetailVM putSeatsByFloorIdItem(String key, List<SeatDTO> seatsByFloorIdItem) {
    if (this.seatsByFloorId == null) {
      this.seatsByFloorId = new HashMap<>();
    }
    this.seatsByFloorId.put(key, seatsByFloorIdItem);
    return this;
  }

  /**
   * Get seatsByFloorId
   * @return seatsByFloorId
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_SEATS_BY_FLOOR_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Map<String, List<SeatDTO>> getSeatsByFloorId() {
    return seatsByFloorId;
  }


  @JsonProperty(JSON_PROPERTY_SEATS_BY_FLOOR_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setSeatsByFloorId(@jakarta.annotation.Nullable Map<String, List<SeatDTO>> seatsByFloorId) {
    this.seatsByFloorId = seatsByFloorId;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SeatMapDetailVM seatMapDetailVM = (SeatMapDetailVM) o;
    return Objects.equals(this.floors, seatMapDetailVM.floors) &&
        Objects.equals(this.seatsByFloorId, seatMapDetailVM.seatsByFloorId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(floors, seatsByFloorId);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SeatMapDetailVM {\n");
    sb.append("    floors: ").append(toIndentedString(floors)).append("\n");
    sb.append("    seatsByFloorId: ").append(toIndentedString(seatsByFloorId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

