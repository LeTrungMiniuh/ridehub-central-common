/*
 * Ms Booking API
 * Ms Booking API documentation
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ridehub.msbooking.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * PaymentTransactionDTO
 */
@JsonPropertyOrder({
  PaymentTransactionDTO.JSON_PROPERTY_ID,
  PaymentTransactionDTO.JSON_PROPERTY_TRANSACTION_ID,
  PaymentTransactionDTO.JSON_PROPERTY_METHOD,
  PaymentTransactionDTO.JSON_PROPERTY_STATUS,
  PaymentTransactionDTO.JSON_PROPERTY_AMOUNT,
  PaymentTransactionDTO.JSON_PROPERTY_TIME,
  PaymentTransactionDTO.JSON_PROPERTY_GATEWAY_NOTE,
  PaymentTransactionDTO.JSON_PROPERTY_CREATED_AT,
  PaymentTransactionDTO.JSON_PROPERTY_UPDATED_AT,
  PaymentTransactionDTO.JSON_PROPERTY_IS_DELETED,
  PaymentTransactionDTO.JSON_PROPERTY_DELETED_AT,
  PaymentTransactionDTO.JSON_PROPERTY_DELETED_BY
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class PaymentTransactionDTO {
  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nullable
  private Long id;

  public static final String JSON_PROPERTY_TRANSACTION_ID = "transactionId";
  @jakarta.annotation.Nonnull
  private String transactionId;

  /**
   * Gets or Sets method
   */
  public enum MethodEnum {
    VNPAY(String.valueOf("VNPAY")),
    
    MOMO(String.valueOf("MOMO")),
    
    ZALOPAY(String.valueOf("ZALOPAY")),
    
    CREDIT_CARD(String.valueOf("CREDIT_CARD")),
    
    BANK_TRANSFER(String.valueOf("BANK_TRANSFER"));

    private String value;

    MethodEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static MethodEnum fromValue(String value) {
      for (MethodEnum b : MethodEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_METHOD = "method";
  @jakarta.annotation.Nullable
  private MethodEnum method;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    INITIATED(String.valueOf("INITIATED")),
    
    PROCESSING(String.valueOf("PROCESSING")),
    
    SUCCESS(String.valueOf("SUCCESS")),
    
    FAILED(String.valueOf("FAILED")),
    
    REFUNDED(String.valueOf("REFUNDED"));

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  @jakarta.annotation.Nullable
  private StatusEnum status;

  public static final String JSON_PROPERTY_AMOUNT = "amount";
  @jakarta.annotation.Nullable
  private BigDecimal amount;

  public static final String JSON_PROPERTY_TIME = "time";
  @jakarta.annotation.Nullable
  private OffsetDateTime time;

  public static final String JSON_PROPERTY_GATEWAY_NOTE = "gatewayNote";
  @jakarta.annotation.Nullable
  private String gatewayNote;

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  @jakarta.annotation.Nonnull
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
  @jakarta.annotation.Nullable
  private OffsetDateTime updatedAt;

  public static final String JSON_PROPERTY_IS_DELETED = "isDeleted";
  @jakarta.annotation.Nullable
  private Boolean isDeleted;

  public static final String JSON_PROPERTY_DELETED_AT = "deletedAt";
  @jakarta.annotation.Nullable
  private OffsetDateTime deletedAt;

  public static final String JSON_PROPERTY_DELETED_BY = "deletedBy";
  @jakarta.annotation.Nullable
  private UUID deletedBy;

  public PaymentTransactionDTO() {
  }

  public PaymentTransactionDTO id(@jakarta.annotation.Nullable Long id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@jakarta.annotation.Nullable Long id) {
    this.id = id;
  }


  public PaymentTransactionDTO transactionId(@jakarta.annotation.Nonnull String transactionId) {
    
    this.transactionId = transactionId;
    return this;
  }

  /**
   * Get transactionId
   * @return transactionId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getTransactionId() {
    return transactionId;
  }


  @JsonProperty(JSON_PROPERTY_TRANSACTION_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTransactionId(@jakarta.annotation.Nonnull String transactionId) {
    this.transactionId = transactionId;
  }


  public PaymentTransactionDTO method(@jakarta.annotation.Nullable MethodEnum method) {
    
    this.method = method;
    return this;
  }

  /**
   * Get method
   * @return method
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public MethodEnum getMethod() {
    return method;
  }


  @JsonProperty(JSON_PROPERTY_METHOD)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMethod(@jakarta.annotation.Nullable MethodEnum method) {
    this.method = method;
  }


  public PaymentTransactionDTO status(@jakarta.annotation.Nullable StatusEnum status) {
    
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(@jakarta.annotation.Nullable StatusEnum status) {
    this.status = status;
  }


  public PaymentTransactionDTO amount(@jakarta.annotation.Nullable BigDecimal amount) {
    
    this.amount = amount;
    return this;
  }

  /**
   * Get amount
   * @return amount
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public BigDecimal getAmount() {
    return amount;
  }


  @JsonProperty(JSON_PROPERTY_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAmount(@jakarta.annotation.Nullable BigDecimal amount) {
    this.amount = amount;
  }


  public PaymentTransactionDTO time(@jakarta.annotation.Nullable OffsetDateTime time) {
    
    this.time = time;
    return this;
  }

  /**
   * Get time
   * @return time
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getTime() {
    return time;
  }


  @JsonProperty(JSON_PROPERTY_TIME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTime(@jakarta.annotation.Nullable OffsetDateTime time) {
    this.time = time;
  }


  public PaymentTransactionDTO gatewayNote(@jakarta.annotation.Nullable String gatewayNote) {
    
    this.gatewayNote = gatewayNote;
    return this;
  }

  /**
   * Get gatewayNote
   * @return gatewayNote
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_GATEWAY_NOTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getGatewayNote() {
    return gatewayNote;
  }


  @JsonProperty(JSON_PROPERTY_GATEWAY_NOTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setGatewayNote(@jakarta.annotation.Nullable String gatewayNote) {
    this.gatewayNote = gatewayNote;
  }


  public PaymentTransactionDTO createdAt(@jakarta.annotation.Nonnull OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(@jakarta.annotation.Nonnull OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public PaymentTransactionDTO updatedAt(@jakarta.annotation.Nullable OffsetDateTime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedAt(@jakarta.annotation.Nullable OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public PaymentTransactionDTO isDeleted(@jakarta.annotation.Nullable Boolean isDeleted) {
    
    this.isDeleted = isDeleted;
    return this;
  }

  /**
   * Get isDeleted
   * @return isDeleted
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsDeleted() {
    return isDeleted;
  }


  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsDeleted(@jakarta.annotation.Nullable Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }


  public PaymentTransactionDTO deletedAt(@jakarta.annotation.Nullable OffsetDateTime deletedAt) {
    
    this.deletedAt = deletedAt;
    return this;
  }

  /**
   * Get deletedAt
   * @return deletedAt
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getDeletedAt() {
    return deletedAt;
  }


  @JsonProperty(JSON_PROPERTY_DELETED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeletedAt(@jakarta.annotation.Nullable OffsetDateTime deletedAt) {
    this.deletedAt = deletedAt;
  }


  public PaymentTransactionDTO deletedBy(@jakarta.annotation.Nullable UUID deletedBy) {
    
    this.deletedBy = deletedBy;
    return this;
  }

  /**
   * Get deletedBy
   * @return deletedBy
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getDeletedBy() {
    return deletedBy;
  }


  @JsonProperty(JSON_PROPERTY_DELETED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeletedBy(@jakarta.annotation.Nullable UUID deletedBy) {
    this.deletedBy = deletedBy;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PaymentTransactionDTO paymentTransactionDTO = (PaymentTransactionDTO) o;
    return Objects.equals(this.id, paymentTransactionDTO.id) &&
        Objects.equals(this.transactionId, paymentTransactionDTO.transactionId) &&
        Objects.equals(this.method, paymentTransactionDTO.method) &&
        Objects.equals(this.status, paymentTransactionDTO.status) &&
        Objects.equals(this.amount, paymentTransactionDTO.amount) &&
        Objects.equals(this.time, paymentTransactionDTO.time) &&
        Objects.equals(this.gatewayNote, paymentTransactionDTO.gatewayNote) &&
        Objects.equals(this.createdAt, paymentTransactionDTO.createdAt) &&
        Objects.equals(this.updatedAt, paymentTransactionDTO.updatedAt) &&
        Objects.equals(this.isDeleted, paymentTransactionDTO.isDeleted) &&
        Objects.equals(this.deletedAt, paymentTransactionDTO.deletedAt) &&
        Objects.equals(this.deletedBy, paymentTransactionDTO.deletedBy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, transactionId, method, status, amount, time, gatewayNote, createdAt, updatedAt, isDeleted, deletedAt, deletedBy);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PaymentTransactionDTO {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    method: ").append(toIndentedString(method)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    gatewayNote: ").append(toIndentedString(gatewayNote)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    deletedAt: ").append(toIndentedString(deletedAt)).append("\n");
    sb.append("    deletedBy: ").append(toIndentedString(deletedBy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

