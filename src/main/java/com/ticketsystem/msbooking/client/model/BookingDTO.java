/*
 * Ms Booking API
 * Ms Booking API documentation
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.ridehub.msbooking.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.ridehub.msbooking.client.model.InvoiceDTO;
import com.ridehub.msbooking.client.model.PaymentTransactionDTO;
import java.math.BigDecimal;
import java.time.OffsetDateTime;
import java.util.UUID;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * BookingDTO
 */
@JsonPropertyOrder({
  BookingDTO.JSON_PROPERTY_ID,
  BookingDTO.JSON_PROPERTY_BOOKING_CODE,
  BookingDTO.JSON_PROPERTY_STATUS,
  BookingDTO.JSON_PROPERTY_QUANTITY,
  BookingDTO.JSON_PROPERTY_TOTAL_AMOUNT,
  BookingDTO.JSON_PROPERTY_CREATED_TIME,
  BookingDTO.JSON_PROPERTY_CUSTOMER_ID,
  BookingDTO.JSON_PROPERTY_CREATED_AT,
  BookingDTO.JSON_PROPERTY_UPDATED_AT,
  BookingDTO.JSON_PROPERTY_IS_DELETED,
  BookingDTO.JSON_PROPERTY_DELETED_AT,
  BookingDTO.JSON_PROPERTY_DELETED_BY,
  BookingDTO.JSON_PROPERTY_INVOICE,
  BookingDTO.JSON_PROPERTY_PAYMENT_TRANSACTION
})
@jakarta.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", comments = "Generator version: 7.14.0")
public class BookingDTO {
  public static final String JSON_PROPERTY_ID = "id";
  @jakarta.annotation.Nullable
  private Long id;

  public static final String JSON_PROPERTY_BOOKING_CODE = "bookingCode";
  @jakarta.annotation.Nonnull
  private String bookingCode;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    DRAFT(String.valueOf("DRAFT")),
    
    AWAITING_PAYMENT(String.valueOf("AWAITING_PAYMENT")),
    
    PAID(String.valueOf("PAID")),
    
    CONFIRMED(String.valueOf("CONFIRMED")),
    
    CANCELED(String.valueOf("CANCELED")),
    
    REFUNDED(String.valueOf("REFUNDED"));

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  @jakarta.annotation.Nonnull
  private StatusEnum status;

  public static final String JSON_PROPERTY_QUANTITY = "quantity";
  @jakarta.annotation.Nullable
  private Integer quantity;

  public static final String JSON_PROPERTY_TOTAL_AMOUNT = "totalAmount";
  @jakarta.annotation.Nonnull
  private BigDecimal totalAmount;

  public static final String JSON_PROPERTY_CREATED_TIME = "createdTime";
  @jakarta.annotation.Nonnull
  private OffsetDateTime createdTime;

  public static final String JSON_PROPERTY_CUSTOMER_ID = "customerId";
  @jakarta.annotation.Nonnull
  private UUID customerId;

  public static final String JSON_PROPERTY_CREATED_AT = "createdAt";
  @jakarta.annotation.Nonnull
  private OffsetDateTime createdAt;

  public static final String JSON_PROPERTY_UPDATED_AT = "updatedAt";
  @jakarta.annotation.Nullable
  private OffsetDateTime updatedAt;

  public static final String JSON_PROPERTY_IS_DELETED = "isDeleted";
  @jakarta.annotation.Nullable
  private Boolean isDeleted;

  public static final String JSON_PROPERTY_DELETED_AT = "deletedAt";
  @jakarta.annotation.Nullable
  private OffsetDateTime deletedAt;

  public static final String JSON_PROPERTY_DELETED_BY = "deletedBy";
  @jakarta.annotation.Nullable
  private UUID deletedBy;

  public static final String JSON_PROPERTY_INVOICE = "invoice";
  @jakarta.annotation.Nullable
  private InvoiceDTO invoice;

  public static final String JSON_PROPERTY_PAYMENT_TRANSACTION = "paymentTransaction";
  @jakarta.annotation.Nullable
  private PaymentTransactionDTO paymentTransaction;

  public BookingDTO() {
  }

  public BookingDTO id(@jakarta.annotation.Nullable Long id) {
    
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Long getId() {
    return id;
  }


  @JsonProperty(JSON_PROPERTY_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setId(@jakarta.annotation.Nullable Long id) {
    this.id = id;
  }


  public BookingDTO bookingCode(@jakarta.annotation.Nonnull String bookingCode) {
    
    this.bookingCode = bookingCode;
    return this;
  }

  /**
   * Get bookingCode
   * @return bookingCode
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_BOOKING_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public String getBookingCode() {
    return bookingCode;
  }


  @JsonProperty(JSON_PROPERTY_BOOKING_CODE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setBookingCode(@jakarta.annotation.Nonnull String bookingCode) {
    this.bookingCode = bookingCode;
  }


  public BookingDTO status(@jakarta.annotation.Nonnull StatusEnum status) {
    
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setStatus(@jakarta.annotation.Nonnull StatusEnum status) {
    this.status = status;
  }


  public BookingDTO quantity(@jakarta.annotation.Nullable Integer quantity) {
    
    this.quantity = quantity;
    return this;
  }

  /**
   * Get quantity
   * @return quantity
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getQuantity() {
    return quantity;
  }


  @JsonProperty(JSON_PROPERTY_QUANTITY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setQuantity(@jakarta.annotation.Nullable Integer quantity) {
    this.quantity = quantity;
  }


  public BookingDTO totalAmount(@jakarta.annotation.Nonnull BigDecimal totalAmount) {
    
    this.totalAmount = totalAmount;
    return this;
  }

  /**
   * Get totalAmount
   * @return totalAmount
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_TOTAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public BigDecimal getTotalAmount() {
    return totalAmount;
  }


  @JsonProperty(JSON_PROPERTY_TOTAL_AMOUNT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setTotalAmount(@jakarta.annotation.Nonnull BigDecimal totalAmount) {
    this.totalAmount = totalAmount;
  }


  public BookingDTO createdTime(@jakarta.annotation.Nonnull OffsetDateTime createdTime) {
    
    this.createdTime = createdTime;
    return this;
  }

  /**
   * Get createdTime
   * @return createdTime
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedTime() {
    return createdTime;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_TIME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedTime(@jakarta.annotation.Nonnull OffsetDateTime createdTime) {
    this.createdTime = createdTime;
  }


  public BookingDTO customerId(@jakarta.annotation.Nonnull UUID customerId) {
    
    this.customerId = customerId;
    return this;
  }

  /**
   * Get customerId
   * @return customerId
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public UUID getCustomerId() {
    return customerId;
  }


  @JsonProperty(JSON_PROPERTY_CUSTOMER_ID)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCustomerId(@jakarta.annotation.Nonnull UUID customerId) {
    this.customerId = customerId;
  }


  public BookingDTO createdAt(@jakarta.annotation.Nonnull OffsetDateTime createdAt) {
    
    this.createdAt = createdAt;
    return this;
  }

  /**
   * Get createdAt
   * @return createdAt
   */
  @jakarta.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }


  @JsonProperty(JSON_PROPERTY_CREATED_AT)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setCreatedAt(@jakarta.annotation.Nonnull OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }


  public BookingDTO updatedAt(@jakarta.annotation.Nullable OffsetDateTime updatedAt) {
    
    this.updatedAt = updatedAt;
    return this;
  }

  /**
   * Get updatedAt
   * @return updatedAt
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }


  @JsonProperty(JSON_PROPERTY_UPDATED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setUpdatedAt(@jakarta.annotation.Nullable OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }


  public BookingDTO isDeleted(@jakarta.annotation.Nullable Boolean isDeleted) {
    
    this.isDeleted = isDeleted;
    return this;
  }

  /**
   * Get isDeleted
   * @return isDeleted
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Boolean getIsDeleted() {
    return isDeleted;
  }


  @JsonProperty(JSON_PROPERTY_IS_DELETED)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setIsDeleted(@jakarta.annotation.Nullable Boolean isDeleted) {
    this.isDeleted = isDeleted;
  }


  public BookingDTO deletedAt(@jakarta.annotation.Nullable OffsetDateTime deletedAt) {
    
    this.deletedAt = deletedAt;
    return this;
  }

  /**
   * Get deletedAt
   * @return deletedAt
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public OffsetDateTime getDeletedAt() {
    return deletedAt;
  }


  @JsonProperty(JSON_PROPERTY_DELETED_AT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeletedAt(@jakarta.annotation.Nullable OffsetDateTime deletedAt) {
    this.deletedAt = deletedAt;
  }


  public BookingDTO deletedBy(@jakarta.annotation.Nullable UUID deletedBy) {
    
    this.deletedBy = deletedBy;
    return this;
  }

  /**
   * Get deletedBy
   * @return deletedBy
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DELETED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public UUID getDeletedBy() {
    return deletedBy;
  }


  @JsonProperty(JSON_PROPERTY_DELETED_BY)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDeletedBy(@jakarta.annotation.Nullable UUID deletedBy) {
    this.deletedBy = deletedBy;
  }


  public BookingDTO invoice(@jakarta.annotation.Nullable InvoiceDTO invoice) {
    
    this.invoice = invoice;
    return this;
  }

  /**
   * Get invoice
   * @return invoice
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_INVOICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public InvoiceDTO getInvoice() {
    return invoice;
  }


  @JsonProperty(JSON_PROPERTY_INVOICE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setInvoice(@jakarta.annotation.Nullable InvoiceDTO invoice) {
    this.invoice = invoice;
  }


  public BookingDTO paymentTransaction(@jakarta.annotation.Nullable PaymentTransactionDTO paymentTransaction) {
    
    this.paymentTransaction = paymentTransaction;
    return this;
  }

  /**
   * Get paymentTransaction
   * @return paymentTransaction
   */
  @jakarta.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_PAYMENT_TRANSACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public PaymentTransactionDTO getPaymentTransaction() {
    return paymentTransaction;
  }


  @JsonProperty(JSON_PROPERTY_PAYMENT_TRANSACTION)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setPaymentTransaction(@jakarta.annotation.Nullable PaymentTransactionDTO paymentTransaction) {
    this.paymentTransaction = paymentTransaction;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BookingDTO bookingDTO = (BookingDTO) o;
    return Objects.equals(this.id, bookingDTO.id) &&
        Objects.equals(this.bookingCode, bookingDTO.bookingCode) &&
        Objects.equals(this.status, bookingDTO.status) &&
        Objects.equals(this.quantity, bookingDTO.quantity) &&
        Objects.equals(this.totalAmount, bookingDTO.totalAmount) &&
        Objects.equals(this.createdTime, bookingDTO.createdTime) &&
        Objects.equals(this.customerId, bookingDTO.customerId) &&
        Objects.equals(this.createdAt, bookingDTO.createdAt) &&
        Objects.equals(this.updatedAt, bookingDTO.updatedAt) &&
        Objects.equals(this.isDeleted, bookingDTO.isDeleted) &&
        Objects.equals(this.deletedAt, bookingDTO.deletedAt) &&
        Objects.equals(this.deletedBy, bookingDTO.deletedBy) &&
        Objects.equals(this.invoice, bookingDTO.invoice) &&
        Objects.equals(this.paymentTransaction, bookingDTO.paymentTransaction);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, bookingCode, status, quantity, totalAmount, createdTime, customerId, createdAt, updatedAt, isDeleted, deletedAt, deletedBy, invoice, paymentTransaction);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BookingDTO {\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    bookingCode: ").append(toIndentedString(bookingCode)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    totalAmount: ").append(toIndentedString(totalAmount)).append("\n");
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    customerId: ").append(toIndentedString(customerId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    isDeleted: ").append(toIndentedString(isDeleted)).append("\n");
    sb.append("    deletedAt: ").append(toIndentedString(deletedAt)).append("\n");
    sb.append("    deletedBy: ").append(toIndentedString(deletedBy)).append("\n");
    sb.append("    invoice: ").append(toIndentedString(invoice)).append("\n");
    sb.append("    paymentTransaction: ").append(toIndentedString(paymentTransaction)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

